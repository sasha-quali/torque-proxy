/*
 * Torque API Reference
 *
 * This page contains information about the Torque APIs and how to use it.<br><br>To be able to test the API methods, you will need an access token to be set in the Authorize section.If you got to this page from your Torque account, we already made it available for you, but you can switch to a different token as needed.<br>To get a different token, use the 'Get token' function available under the 'Access Tokens' section. After running the method, copy the access_token you get in the response and set it in the Authorize fieldas 'Bearer access_token'. For example: Bearer fqSWuw72BbUVFn8AbokF77GJ0r5KEn9MiZjLXF8kBwI.<br><br>The API can be accessed with your account endpoint as will be mentioned in the descriptions and examples or using https://qtorque.io as the prefix instead.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Quali.Torque.Api.Attributes;
using Quali.Torque.Api.Models;

namespace Quali.Torque.Api.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public abstract class AgentApiController : ControllerBase
    { 
        /// <summary>
        /// Get the K8s deployment YAML
        /// </summary>
        /// <remarks>Gets the Kubernetes agent deployment YAML file.</remarks>
        /// <param name="cloudAccount">Cloud account containing the Kubernetes cluster</param>
        /// <param name="computeService">Kubernetes cluster name</param>
        /// <param name="sandboxNamespaces">Namespace defined in Kubernetes cluster</param>
        /// <response code="200">Success</response>
        /// <response code="404">Cloud account, compute service, or cluster not found</response>
        /// <response code="422">Cloud not processed request</response>
        [HttpGet]
        [Route("/api/settings/cloudaccounts/computeservices/k8s/agent-deployment-yaml")]
        [Authorize(Policy = "Bearer")]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 404, type: typeof(ErrorResponse))]
        [ProducesResponseType(statusCode: 422, type: typeof(ErrorResponse))]
        public abstract IActionResult ApiSettingsCloudaccountsComputeservicesK8sAgentDeploymentYamlGet([FromQuery (Name = "cloudAccount")]string cloudAccount, [FromQuery (Name = "computeService")]string computeService, [FromQuery (Name = "sandboxNamespaces")]string sandboxNamespaces);

        /// <summary>
        /// Renew cluster token
        /// </summary>
        /// <remarks>Renews expired cluster token.</remarks>
        /// <param name="cloudAccount">Cloud account containing the Kubernetes cluster</param>
        /// <param name="computeService">Kubernetes cluster name</param>
        /// <response code="200">Success</response>
        /// <response code="404">Cloud account, compute service, or cluster not found</response>
        /// <response code="422">Could not processed request</response>
        [HttpPut]
        [Route("/api/settings/cloudaccounts/computeservices/k8s/renew-cluster-token")]
        [Authorize(Policy = "Bearer")]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 404, type: typeof(ErrorResponse))]
        public abstract IActionResult ApiSettingsCloudaccountsComputeservicesK8sRenewClusterTokenPut([FromQuery (Name = "cloudAccount")]string cloudAccount, [FromQuery (Name = "computeService")]string computeService);

        /// <summary>
        /// Get EKS deployment YAML
        /// </summary>
        /// <remarks>Gets the Amazon Elastic Kubernetes service (eks) agent deployment YAML file.</remarks>
        /// <param name="cloudAccount">Cloud account containing the Kubernetes cluster</param>
        /// <param name="computeService">Kubernetes cluster name</param>
        /// <param name="sandboxNamespace">Namespace defined in the Kubernetes cluster</param>
        /// <param name="roleArn">Rule ARN of the EKS</param>
        /// <response code="200">Success</response>
        /// <response code="404">Cloud account, compute service, or cluster not found</response>
        /// <response code="422">Cloud not processed request</response>
        [HttpGet]
        [Route("/api/settings/computeservices/eks/agent-deployment-yaml")]
        [Authorize(Policy = "Bearer")]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 404, type: typeof(ErrorResponse))]
        [ProducesResponseType(statusCode: 422, type: typeof(ErrorResponse))]
        public abstract IActionResult ApiSettingsComputeservicesEksAgentDeploymentYamlGet([FromQuery (Name = "cloudAccount")]string cloudAccount, [FromQuery (Name = "computeService")]string computeService, [FromQuery (Name = "sandboxNamespace")]List<string> sandboxNamespace, [FromQuery (Name = "roleArn")]string roleArn);
    }
}
