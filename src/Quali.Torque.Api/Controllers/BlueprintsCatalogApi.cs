/*
 * Torque API Reference
 *
 * This page contains information about the Torque APIs and how to use it.<br><br>To be able to test the API methods, you will need an access token to be set in the Authorize section.If you got to this page from your Torque account, we already made it available for you, but you can switch to a different token as needed.<br>To get a different token, use the 'Get token' function available under the 'Access Tokens' section. After running the method, copy the access_token you get in the response and set it in the Authorize fieldas 'Bearer access_token'. For example: Bearer fqSWuw72BbUVFn8AbokF77GJ0r5KEn9MiZjLXF8kBwI.<br><br>The API can be accessed with your account endpoint as will be mentioned in the descriptions and examples or using https://qtorque.io as the prefix instead.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Quali.Torque.Api.Attributes;
using Quali.Torque.Api.Models;

namespace Quali.Torque.Api.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public abstract class BlueprintsCatalogApiController : ControllerBase
    { 
        /// <summary>
        /// Unpublish blueprint
        /// </summary>
        /// <remarks>Unpublishes a blueprint from blueprint catalog.</remarks>
        /// <param name="spaceName">Name of the space containing the blueprint</param>
        /// <param name="blueprintName">Name of the blueprint to be unpublished from blueprints catalog</param>
        /// <response code="200">Success</response>
        /// <response code="404">Space or blueprint in catalog not found</response>
        [HttpDelete]
        [Route("/api/spaces/{space_name}/catalog/{blueprint_name}")]
        [Authorize(Policy = "Bearer")]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 404, type: typeof(ErrorResponse))]
        public abstract IActionResult ApiSpacesSpaceNameCatalogBlueprintNameDelete([FromRoute (Name = "space_name")][Required]string spaceName, [FromRoute (Name = "blueprint_name")][Required]string blueprintName);

        /// <summary>
        /// Get blueprint details
        /// </summary>
        /// <remarks>Returns details of a published blueprint in blueprints catalog.</remarks>
        /// <param name="spaceName">Name of the space containing the blueprint</param>
        /// <param name="blueprintName">Blueprint name</param>
        /// <response code="200">Success</response>
        /// <response code="404">Space, blueprint, or blueprint in catalog not found</response>
        [HttpGet]
        [Route("/api/spaces/{space_name}/catalog/{blueprint_name}")]
        [Authorize(Policy = "Bearer")]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 200, type: typeof(CatalogForGetResponse))]
        [ProducesResponseType(statusCode: 404, type: typeof(ErrorResponse))]
        public abstract IActionResult ApiSpacesSpaceNameCatalogBlueprintNameGet([FromRoute (Name = "space_name")][Required]string spaceName, [FromRoute (Name = "blueprint_name")][Required]string blueprintName);

        /// <summary>
        /// Get blueprints in catalog
        /// </summary>
        /// <remarks>Returns details of all published blueprints in the blueprints catalog, including sample blueprints.</remarks>
        /// <param name="spaceName">Name of the space containing the blueprints</param>
        /// <response code="200">Success</response>
        /// <response code="404">Space not found</response>
        [HttpGet]
        [Route("/api/spaces/{space_name}/catalog")]
        [Authorize(Policy = "Bearer")]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 200, type: typeof(List<CatalogForGetAllResponse>))]
        [ProducesResponseType(statusCode: 404, type: typeof(ErrorResponse))]
        public abstract IActionResult ApiSpacesSpaceNameCatalogGet([FromRoute (Name = "space_name")][Required]string spaceName);

        /// <summary>
        /// Publish blueprint
        /// </summary>
        /// <remarks>Publishes a blueprint to blueprints catalog.</remarks>
        /// <param name="spaceName">Name of the space that will contain the blueprint</param>
        /// <param name="addCatalogRequest"></param>
        /// <response code="200">Success</response>
        /// <response code="404">Space or blueprint not found</response>
        [HttpPost]
        [Route("/api/spaces/{space_name}/catalog")]
        [Authorize(Policy = "Bearer")]
        [Consumes("application/json")]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 404, type: typeof(ErrorResponse))]
        public abstract IActionResult ApiSpacesSpaceNameCatalogPost([FromRoute (Name = "space_name")][Required]string spaceName, [FromBody]AddCatalogRequest addCatalogRequest);
    }
}
