/*
 * Torque API Reference
 *
 * This page contains information about the Torque APIs and how to use it.<br><br>To be able to test the API methods, you will need an access token to be set in the Authorize section.If you got to this page from your Torque account, we already made it available for you, but you can switch to a different token as needed.<br>To get a different token, use the 'Get token' function available under the 'Access Tokens' section. After running the method, copy the access_token you get in the response and set it in the Authorize fieldas 'Bearer access_token'. For example: Bearer fqSWuw72BbUVFn8AbokF77GJ0r5KEn9MiZjLXF8kBwI.<br><br>The API can be accessed with your account endpoint as will be mentioned in the descriptions and examples or using https://qtorque.io as the prefix instead.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Quali.Torque.Api.Attributes;
using Quali.Torque.Api.Models;

namespace Quali.Torque.Api.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public abstract class ProductionEnvironmentsApiController : ControllerBase
    { 
        /// <summary>
        /// Get production environments
        /// </summary>
        /// <remarks>Gets all production environments from a space.</remarks>
        /// <param name="spaceName">Name of the space containing the desired production environments</param>
        /// <response code="200">Success</response>
        /// <response code="400">Operation failed</response>
        /// <response code="404">Space not found</response>
        [HttpGet]
        [Route("/api/spaces/{space_name}/production")]
        [Authorize(Policy = "Bearer")]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 200, type: typeof(List<ProductionResponseListItem>))]
        [ProducesResponseType(statusCode: 400, type: typeof(ErrorResponse))]
        [ProducesResponseType(statusCode: 404, type: typeof(ErrorResponse))]
        public abstract IActionResult ApiSpacesSpaceNameProductionGet([FromRoute (Name = "space_name")][Required]string spaceName);

        /// <summary>
        /// Create blue environment
        /// </summary>
        /// <remarks>Creates a blue production environment.</remarks>
        /// <param name="spaceName">Name of the space that will contain the blue production environment</param>
        /// <param name="createProductionBlueRequest"></param>
        /// <response code="202">Operation started</response>
        /// <response code="400">Operation failed</response>
        /// <response code="404">Space or user not found</response>
        /// <response code="422">Could not process the request</response>
        /// <response code="424">Cloud account not accessible</response>
        [HttpPost]
        [Route("/api/spaces/{space_name}/production")]
        [Authorize(Policy = "Bearer")]
        [Consumes("application/json")]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 202, type: typeof(CreateEnvResponse))]
        [ProducesResponseType(statusCode: 400, type: typeof(ErrorResponse))]
        [ProducesResponseType(statusCode: 404, type: typeof(ErrorResponse))]
        [ProducesResponseType(statusCode: 422, type: typeof(ErrorResponse))]
        [ProducesResponseType(statusCode: 424, type: typeof(ErrorResponse))]
        public abstract IActionResult ApiSpacesSpaceNameProductionPost([FromRoute (Name = "space_name")][Required]string spaceName, [FromBody]CreateProductionBlueRequest createProductionBlueRequest);

        /// <summary>
        /// Update blue environment debugging service
        /// </summary>
        /// <remarks>Updates debugging service of blue production environment.</remarks>
        /// <param name="spaceName">Name of the space containing the blue production environment</param>
        /// <param name="productionId">Production environment ID</param>
        /// <param name="value">New value of debugging service: \&quot;on\&quot; or \&quot;off\&quot;</param>
        /// <response code="200">Success</response>
        /// <response code="202">Operation started</response>
        /// <response code="400">Operation failed</response>
        /// <response code="404">Space, production environment, or QualiY not found</response>
        /// <response code="409">Current status of QualiY conflicts with new value</response>
        /// <response code="422">Value is empty or invalid</response>
        /// <response code="424">Cloud account not accessible</response>
        [HttpPut]
        [Route("/api/spaces/{space_name}/production/{production_id}/debuggingservice")]
        [Authorize(Policy = "Bearer")]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 400, type: typeof(ErrorResponse))]
        [ProducesResponseType(statusCode: 404, type: typeof(ErrorResponse))]
        [ProducesResponseType(statusCode: 409, type: typeof(ErrorResponse))]
        [ProducesResponseType(statusCode: 422, type: typeof(ErrorResponse))]
        [ProducesResponseType(statusCode: 424, type: typeof(ErrorResponse))]
        public abstract IActionResult ApiSpacesSpaceNameProductionProductionIdDebuggingservicePut([FromRoute (Name = "space_name")][Required]string spaceName, [FromRoute (Name = "production_id")][Required]string productionId, [FromQuery (Name = "value")]string value);

        /// <summary>
        /// Delete blue environment
        /// </summary>
        /// <remarks>Deletes a blue production environment.</remarks>
        /// <param name="spaceName">Name of the space containing the blue production environment</param>
        /// <param name="productionId">Production environment ID</param>
        /// <response code="202">Operation started</response>
        /// <response code="400">Operation failed</response>
        /// <response code="404">Space or production environment not found</response>
        /// <response code="423">Production environment temporarily unavailable for termination</response>
        /// <response code="424">Cloud account not accessible</response>
        [HttpDelete]
        [Route("/api/spaces/{space_name}/production/{production_id}")]
        [Authorize(Policy = "Bearer")]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 400, type: typeof(ErrorResponse))]
        [ProducesResponseType(statusCode: 404, type: typeof(ErrorResponse))]
        [ProducesResponseType(statusCode: 423, type: typeof(ErrorResponse))]
        [ProducesResponseType(statusCode: 424, type: typeof(ErrorResponse))]
        public abstract IActionResult ApiSpacesSpaceNameProductionProductionIdDelete([FromRoute (Name = "space_name")][Required]string spaceName, [FromRoute (Name = "production_id")][Required]string productionId);

        /// <summary>
        /// Get blue environment
        /// </summary>
        /// <remarks>Gets a blue production environment.</remarks>
        /// <param name="spaceName">Name of the space containing the blue production environment</param>
        /// <param name="productionId">Production environment ID</param>
        /// <response code="200">Success</response>
        /// <response code="400">Operation failed</response>
        /// <response code="404">Space or production environment not found</response>
        [HttpGet]
        [Route("/api/spaces/{space_name}/production/{production_id}")]
        [Authorize(Policy = "Bearer")]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 200, type: typeof(ProductionBlueResponse))]
        [ProducesResponseType(statusCode: 400, type: typeof(ErrorResponse))]
        [ProducesResponseType(statusCode: 404, type: typeof(ErrorResponse))]
        public abstract IActionResult ApiSpacesSpaceNameProductionProductionIdGet([FromRoute (Name = "space_name")][Required]string spaceName, [FromRoute (Name = "production_id")][Required]string productionId);

        /// <summary>
        /// Update green environment debugging service
        /// </summary>
        /// <remarks>Updates debugging service of green production environment.</remarks>
        /// <param name="spaceName">Name of the space containing the green production environment</param>
        /// <param name="productionId">Production environment ID</param>
        /// <param name="value">New value of debugging service: \&quot;on\&quot; or \&quot;off\&quot;</param>
        /// <response code="200">Success</response>
        /// <response code="202">Operation started</response>
        /// <response code="400">Operation failed</response>
        /// <response code="404">Space, blue/green production environment, or QualiY not found</response>
        /// <response code="409">Current status of QualiY conflicts with new value</response>
        /// <response code="422">Value is empty or invalid</response>
        /// <response code="424">Cloud account not accessible</response>
        [HttpPut]
        [Route("/api/spaces/{space_name}/production/{production_id}/green/debuggingservice")]
        [Authorize(Policy = "Bearer")]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 400, type: typeof(ErrorResponse))]
        [ProducesResponseType(statusCode: 404, type: typeof(ErrorResponse))]
        [ProducesResponseType(statusCode: 409, type: typeof(ErrorResponse))]
        [ProducesResponseType(statusCode: 422, type: typeof(ErrorResponse))]
        [ProducesResponseType(statusCode: 424, type: typeof(ErrorResponse))]
        public abstract IActionResult ApiSpacesSpaceNameProductionProductionIdGreenDebuggingservicePut([FromRoute (Name = "space_name")][Required]string spaceName, [FromRoute (Name = "production_id")][Required]string productionId, [FromQuery (Name = "value")]string value);

        /// <summary>
        /// Deletes a green production environment
        /// </summary>
        /// <param name="spaceName">Name of the space containing the green production environment</param>
        /// <param name="productionId">Production environment ID</param>
        /// <response code="202">Operation started</response>
        /// <response code="400">Operation failed</response>
        /// <response code="404">Space or blue/green production not found</response>
        /// <response code="423">Production environment temporarily unavailable for termination</response>
        /// <response code="424">Cloud account not accessible</response>
        [HttpDelete]
        [Route("/api/spaces/{space_name}/production/{production_id}/green")]
        [Authorize(Policy = "Bearer")]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 400, type: typeof(ErrorResponse))]
        [ProducesResponseType(statusCode: 404, type: typeof(ErrorResponse))]
        [ProducesResponseType(statusCode: 423, type: typeof(ErrorResponse))]
        [ProducesResponseType(statusCode: 424, type: typeof(ErrorResponse))]
        public abstract IActionResult ApiSpacesSpaceNameProductionProductionIdGreenDelete([FromRoute (Name = "space_name")][Required]string spaceName, [FromRoute (Name = "production_id")][Required]string productionId);

        /// <summary>
        /// Expose green environment
        /// </summary>
        /// <remarks>Exposes a green production environment.  See https://community.qtorque.io/creating-your-production-environment-56/managing-production-with-blue-green-deployment-231</remarks>
        /// <param name="spaceName">Name of the space containing the green production environment</param>
        /// <param name="productionId">Production environment ID</param>
        /// <param name="value">Exposure amount in percentage of the green production environment to user traffic              &lt;remarks&gt;              Value can be 0 or 100              &lt;/remarks&gt;</param>
        /// <response code="200">Success</response>
        /// <response code="202">Operation started</response>
        /// <response code="400">Operation failed</response>
        /// <response code="404">Space or blue/green production environment not found</response>
        /// <response code="409">Green not ready for exposure or green cannot be exposed while promoting</response>
        /// <response code="422">Invalid exposure value</response>
        /// <response code="424">Cloud account not accessible</response>
        [HttpPut]
        [Route("/api/spaces/{space_name}/production/{production_id}/green/exposure")]
        [Authorize(Policy = "Bearer")]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 400, type: typeof(ErrorResponse))]
        [ProducesResponseType(statusCode: 404, type: typeof(ErrorResponse))]
        [ProducesResponseType(statusCode: 409, type: typeof(ErrorResponse))]
        [ProducesResponseType(statusCode: 422, type: typeof(ErrorResponse))]
        [ProducesResponseType(statusCode: 424, type: typeof(ErrorResponse))]
        public abstract IActionResult ApiSpacesSpaceNameProductionProductionIdGreenExposurePut([FromRoute (Name = "space_name")][Required]string spaceName, [FromRoute (Name = "production_id")][Required]string productionId, [FromQuery (Name = "value")]int? value);

        /// <summary>
        /// Get green environment
        /// </summary>
        /// <remarks>Gets a green production environment</remarks>
        /// <param name="spaceName">Name of the space containing the green production environment</param>
        /// <param name="productionId">Production environment ID</param>
        /// <response code="200">Success</response>
        /// <response code="400">Operation failed</response>
        /// <response code="404">Space or production environment not found</response>
        [HttpGet]
        [Route("/api/spaces/{space_name}/production/{production_id}/green")]
        [Authorize(Policy = "Bearer")]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 200, type: typeof(ProductionGreenResponse))]
        [ProducesResponseType(statusCode: 400, type: typeof(ErrorResponse))]
        [ProducesResponseType(statusCode: 404, type: typeof(ErrorResponse))]
        public abstract IActionResult ApiSpacesSpaceNameProductionProductionIdGreenGet([FromRoute (Name = "space_name")][Required]string spaceName, [FromRoute (Name = "production_id")][Required]string productionId);

        /// <summary>
        /// Creates a green production environment
        /// </summary>
        /// <param name="spaceName">Name of the space that will contain the green production environment</param>
        /// <param name="productionId">Production environment ID</param>
        /// <param name="createProductionGreenRequest"></param>
        /// <response code="202">Operation started</response>
        /// <response code="400">Operation failed</response>
        /// <response code="404">Space, user, or blue production environment not found</response>
        /// <response code="422">Could not process the request</response>
        /// <response code="424">Cloud account not accessible</response>
        [HttpPost]
        [Route("/api/spaces/{space_name}/production/{production_id}/green")]
        [Authorize(Policy = "Bearer")]
        [Consumes("application/json")]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 202, type: typeof(CreateEnvResponse))]
        [ProducesResponseType(statusCode: 400, type: typeof(ErrorResponse))]
        [ProducesResponseType(statusCode: 404, type: typeof(ErrorResponse))]
        [ProducesResponseType(statusCode: 422, type: typeof(ErrorResponse))]
        [ProducesResponseType(statusCode: 424, type: typeof(ErrorResponse))]
        public abstract IActionResult ApiSpacesSpaceNameProductionProductionIdGreenPost([FromRoute (Name = "space_name")][Required]string spaceName, [FromRoute (Name = "production_id")][Required]string productionId, [FromBody]CreateProductionGreenRequest createProductionGreenRequest);

        /// <summary>
        /// Promote green environment
        /// </summary>
        /// <remarks>User traffic will be redirected only to green production environment.  See https://community.qtorque.io/creating-your-production-environment-56/managing-production-with-blue-green-deployment-231</remarks>
        /// <param name="spaceName">Name of the space containing the green production environment</param>
        /// <param name="productionId">Production environment ID</param>
        /// <response code="200">Success</response>
        /// <response code="202">Operation started</response>
        /// <response code="400">Operation failed</response>
        /// <response code="404">Space, blue/green production environment, or account not found</response>
        /// <response code="409">Green not ready for promoting or Green cannot be promoting while being exposed</response>
        /// <response code="424">Cloud account not accessible</response>
        [HttpPut]
        [Route("/api/spaces/{space_name}/production/{production_id}/green/promote")]
        [Authorize(Policy = "Bearer")]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 400, type: typeof(ErrorResponse))]
        [ProducesResponseType(statusCode: 404, type: typeof(ErrorResponse))]
        [ProducesResponseType(statusCode: 409, type: typeof(ErrorResponse))]
        [ProducesResponseType(statusCode: 424, type: typeof(ErrorResponse))]
        public abstract IActionResult ApiSpacesSpaceNameProductionProductionIdGreenPromotePut([FromRoute (Name = "space_name")][Required]string spaceName, [FromRoute (Name = "production_id")][Required]string productionId);
    }
}
