/*
 * Torque API Reference
 *
 * This page contains information about the Torque APIs and how to use it.<br><br>To be able to test the API methods, you will need an access token to be set in the Authorize section.If you got to this page from your Torque account, we already made it available for you, but you can switch to a different token as needed.<br>To get a different token, use the 'Get token' function available under the 'Access Tokens' section. After running the method, copy the access_token you get in the response and set it in the Authorize fieldas 'Bearer access_token'. For example: Bearer fqSWuw72BbUVFn8AbokF77GJ0r5KEn9MiZjLXF8kBwI.<br><br>The API can be accessed with your account endpoint as will be mentioned in the descriptions and examples or using https://qtorque.io as the prefix instead.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Quali.Torque.Api.Attributes;
using Quali.Torque.Api.Models;

namespace Quali.Torque.Api.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public abstract class AccessTokensApiController : ControllerBase
    { 
        /// <summary>
        /// Get token
        /// </summary>
        /// <remarks>Creates an API session token. Token validity period is 7200 seconds.</remarks>
        /// <param name="account">Account name</param>
        /// <param name="modelForLogin"></param>
        /// <response code="200">Success</response>
        /// <response code="401">Invalid credentials or too many login attempts</response>
        /// <response code="404">User not found</response>
        [HttpPost]
        [Route("/api/accounts/{account}/login")]
        [Consumes("application/json")]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 200, type: typeof(TokenResponse))]
        [ProducesResponseType(statusCode: 401, type: typeof(ErrorResponse))]
        [ProducesResponseType(statusCode: 404, type: typeof(ErrorResponse))]
        public abstract IActionResult ApiAccountsAccountLoginPost([FromRoute (Name = "account")][Required]string account, [FromBody]ModelForLogin modelForLogin);

        /// <summary>
        /// Get long token
        /// </summary>
        /// <remarks>Requests a long-lived access token. Token validity period is 2147483647 seconds.</remarks>
        /// <response code="200">Success</response>
        /// <response code="401">Invalid credentials</response>
        /// <response code="404">User not found</response>
        [HttpPost]
        [Route("/api/token/longtoken")]
        [Authorize(Policy = "Bearer")]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 200, type: typeof(TokenResponse))]
        [ProducesResponseType(statusCode: 401, type: typeof(ErrorResponse))]
        [ProducesResponseType(statusCode: 404, type: typeof(ErrorResponse))]
        public abstract IActionResult ApiTokenLongtokenPost();

        /// <summary>
        /// Refresh token
        /// </summary>
        /// <remarks>Extends an existing session. Use the new access token returned in the methodâ€™s response to reauthorize the session.</remarks>
        /// <param name="refreshTokenModel"></param>
        /// <response code="200">Success</response>
        /// <response code="422">Refresh token is invalid or was not given</response>
        [HttpPost]
        [Route("/api/token/refresh")]
        [Consumes("application/json")]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 200, type: typeof(TokenResponse))]
        [ProducesResponseType(statusCode: 422, type: typeof(ErrorResponse))]
        public abstract IActionResult ApiTokenRefreshPost([FromBody]RefreshTokenModel refreshTokenModel);

        /// <summary>
        /// Revoke token
        /// </summary>
        /// <remarks>Cancels the current API session (nullifies the active access token)</remarks>
        /// <response code="200">Success</response>
        /// <response code="422">Failed to revoke access or refresh token</response>
        [HttpPost]
        [Route("/api/token/revoke")]
        [Authorize(Policy = "Bearer")]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 422, type: typeof(ErrorResponse))]
        public abstract IActionResult ApiTokenRevokePost();

        /// <summary>
        /// Revoke long token
        /// </summary>
        /// <remarks>Cancels the current long token API session (nullifies the active long token)</remarks>
        /// <response code="200">Success</response>
        /// <response code="404">User not found</response>
        /// <response code="422">Failed to revoke long access token</response>
        [HttpPost]
        [Route("/api/token/revokelongtoken")]
        [Authorize(Policy = "Bearer")]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 404, type: typeof(ErrorResponse))]
        [ProducesResponseType(statusCode: 422, type: typeof(ErrorResponse))]
        public abstract IActionResult ApiTokenRevokelongtokenPost();
    }
}
